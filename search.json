[{"title":"LeetCode 归并排序","url":"/StormCavalry.github.io/2020/03/01/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/","content":"<h5 id=\"基本思路\"><a href=\"#基本思路\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h5><p>  在O(n log n)的时间内使用常数级空间复杂度对链表进行排序，用归并排序来解决快速且稳定；归并排序即先使每个子序列有序，再使子序列段间有序；将已有序的子序列合并，得到完全有序的序列。</p>\n<h5 id=\"递归得到子序列\"><a href=\"#递归得到子序列\" class=\"headerlink\" title=\"递归得到子序列\"></a>递归得到子序列</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ListNode <span class=\"title\">sortList</span><span class=\"params\">(ListNode head)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">if</span>(head==<span class=\"keyword\">null</span>||head.next==<span class=\"keyword\">null</span>) <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">     <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">      * 找中点</span></span><br><span class=\"line\"><span class=\"comment\">      */</span></span><br><span class=\"line\">     ListNode first=head;</span><br><span class=\"line\">     ListNode last=head;</span><br><span class=\"line\">     <span class=\"keyword\">while</span>(first.next!=<span class=\"keyword\">null</span>&amp;&amp;first.next.next!=<span class=\"keyword\">null</span>)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         first=first.next.next;</span><br><span class=\"line\">         last=last.next;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     ListNode mid =last.next;</span><br><span class=\"line\">     <span class=\"comment\">//断开链表</span></span><br><span class=\"line\">     last.next=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> merge(sortList(head),sortList(mid));</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"合并子序列\"><a href=\"#合并子序列\" class=\"headerlink\" title=\"合并子序列\"></a>合并子序列</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> ListNode <span class=\"title\">merge</span><span class=\"params\">(ListNode a,ListNode b)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">       * 给定一个头节点</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\">        ListNode head = <span class=\"keyword\">new</span> ListNode(<span class=\"number\">0</span>);</span><br><span class=\"line\">        ListNode m = head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(a!=<span class=\"keyword\">null</span>&amp;&amp;b!=<span class=\"keyword\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * 从小到大排列</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.val&lt;b.val)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                m.next=a;</span><br><span class=\"line\">                a=a.next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                m.next=b;</span><br><span class=\"line\">                b=b.next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            m=m.next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">       * 看谁不为空，就代表它更大，应该排在后面</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span>(a!=<span class=\"keyword\">null</span>) m.next=a;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> m.next=b;</span><br><span class=\"line\">            <span class=\"comment\">//去掉头节点</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> head.next;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n","tags":["leetcode"]},{"title":"第一天记录","url":"/StormCavalry.github.io/2020/02/29/Hello!%20%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/","content":"<ul>\n<li>第一次搭建博客，是基于<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">hexo</a>搭建的，希望以后能坚持写博客。</li>\n</ul>\n"}]